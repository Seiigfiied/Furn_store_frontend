{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class UserAuthService {\n  constructor() {}\n  setRoles(roles) {\n    localStorage.setItem('roles', JSON.stringify(roles));\n  }\n  getRoles() {\n    return JSON.parse(localStorage.getItem('roles'));\n  }\n  setToken(jwtToken) {\n    localStorage.setItem('jwtToken', jwtToken);\n  }\n  getToken() {\n    return localStorage.getItem('jwtToken');\n  }\n  clear() {\n    localStorage.clear();\n  }\n  isLoggedIn() {\n    return this.getRoles() && this.getToken();\n  }\n  isAdmin() {\n    const roles = this.getRoles();\n    return roles[0].roleName === 'Admin';\n  }\n  isUser() {\n    const roles = this.getRoles();\n    return roles[0].roleName === 'User';\n  }\n  setUserFullName(userFirstName, userLastName) {\n    localStorage.setItem('userFullName', userFirstName + ' ' + userLastName);\n  }\n  getUserFullName() {\n    return localStorage.getItem('userFullName');\n  }\n}\nUserAuthService.ɵfac = function UserAuthService_Factory(t) {\n  return new (t || UserAuthService)();\n};\nUserAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserAuthService,\n  factory: UserAuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,eAAe;EAC1BC,eAAe;EAERC,QAAQ,CAACC,KAAS;IACvBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC,CAAC;EACtD;EAEOK,QAAQ;IACb,OAAOF,IAAI,CAACG,KAAK,CAACL,YAAY,CAACM,OAAO,CAAC,OAAO,CAAE,CAAC;EACnD;EAEOC,QAAQ,CAACC,QAAgB;IAC9BR,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEO,QAAQ,CAAC;EAC5C;EAEOC,QAAQ;IACb,OAAOT,YAAY,CAACM,OAAO,CAAC,UAAU,CAAE;EAC1C;EAEOI,KAAK;IACVV,YAAY,CAACU,KAAK,EAAE;EACtB;EAEOC,UAAU;IACf,OAAO,IAAI,CAACP,QAAQ,EAAE,IAAI,IAAI,CAACK,QAAQ,EAAE;EAC3C;EAEOG,OAAO;IACZ,MAAMb,KAAK,GAAU,IAAI,CAACK,QAAQ,EAAE;IAEpC,OAAOL,KAAK,CAAC,CAAC,CAAC,CAACc,QAAQ,KAAK,OAAO;EACtC;EAEOC,MAAM;IACX,MAAMf,KAAK,GAAU,IAAI,CAACK,QAAQ,EAAE;IAEpC,OAAOL,KAAK,CAAC,CAAC,CAAC,CAACc,QAAQ,KAAK,MAAM;EACrC;EAEOE,eAAe,CAACC,aAAqB,EAAEC,YAAoB;IAChEjB,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEe,aAAa,GAAG,GAAG,GAAGC,YAAY,CAAC;EAC1E;EAEOC,eAAe;IACpB,OAAOlB,YAAY,CAACM,OAAO,CAAC,cAAc,CAAE;EAC9C;;AA7CWV,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAuB,SAAfvB,eAAe;EAAAwB,YAFd;AAAM","names":["UserAuthService","constructor","setRoles","roles","localStorage","setItem","JSON","stringify","getRoles","parse","getItem","setToken","jwtToken","getToken","clear","isLoggedIn","isAdmin","roleName","isUser","setUserFullName","userFirstName","userLastName","getUserFullName","factory","providedIn"],"sourceRoot":"","sources":["C:\\hit\\Git\\Course_work\\src\\app\\_services\\user-auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserAuthService {\r\n  constructor() {}\r\n\r\n  public setRoles(roles: []) {\r\n    localStorage.setItem('roles', JSON.stringify(roles));\r\n  }\r\n\r\n  public getRoles() {\r\n    return JSON.parse(localStorage.getItem('roles')!);\r\n  }\r\n\r\n  public setToken(jwtToken: string) {\r\n    localStorage.setItem('jwtToken', jwtToken);\r\n  }\r\n\r\n  public getToken(): string {\r\n    return localStorage.getItem('jwtToken')!;\r\n  }\r\n\r\n  public clear() {\r\n    localStorage.clear();\r\n  }\r\n\r\n  public isLoggedIn() {\r\n    return this.getRoles() && this.getToken();\r\n  }\r\n\r\n  public isAdmin() {\r\n    const roles: any[] = this.getRoles();\r\n\r\n    return roles[0].roleName === 'Admin';\r\n  }\r\n\r\n  public isUser() {\r\n    const roles: any[] = this.getRoles();\r\n\r\n    return roles[0].roleName === 'User';\r\n  }\r\n\r\n  public setUserFullName(userFirstName: string, userLastName: string) {\r\n    localStorage.setItem('userFullName', userFirstName + ' ' + userLastName);\r\n  }\r\n\r\n  public getUserFullName() {\r\n    return localStorage.getItem('userFullName')!;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}