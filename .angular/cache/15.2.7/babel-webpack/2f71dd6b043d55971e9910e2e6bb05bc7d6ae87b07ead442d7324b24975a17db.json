{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./_services/product.service\";\nimport * as i2 from \"./image-processing.service\";\nexport class BuyProductResolveService {\n  constructor(productService, imageProcessingService) {\n    this.productService = productService;\n    this.imageProcessingService = imageProcessingService;\n  }\n  resolve(route, state) {\n    const id = route.paramMap.get('id');\n    const isSingleProductCheckout = route.paramMap.get('isSingleProductCheckout');\n    return this.productService.getProductDetails(isSingleProductCheckout, id).pipe(map((x, i) => x.map(product => this.imageProcessingService.createImages(product))));\n  }\n}\nBuyProductResolveService.ɵfac = function BuyProductResolveService_Factory(t) {\n  return new (t || BuyProductResolveService)(i0.ɵɵinject(i1.ProductService), i0.ɵɵinject(i2.ImageProcessingService));\n};\nBuyProductResolveService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BuyProductResolveService,\n  factory: BuyProductResolveService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAQA,SAAqBA,GAAG,QAAQ,MAAM;;;;AAMtC,OAAM,MAAOC,wBAAwB;EACnCC,YACUC,cAA8B,EAC9BC,sBAA8C;IAD9C,mBAAc,GAAdD,cAAc;IACd,2BAAsB,GAAtBC,sBAAsB;EAC7B;EAEHC,OAAO,CACLC,KAA6B,EAC7BC,KAA0B;IAE1B,MAAMC,EAAE,GAAGF,KAAK,CAACG,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IACnC,MAAMC,uBAAuB,GAAGL,KAAK,CAACG,QAAQ,CAACC,GAAG,CAChD,yBAAyB,CAC1B;IAED,OAAO,IAAI,CAACP,cAAc,CACvBS,iBAAiB,CAACD,uBAAuB,EAAEH,EAAE,CAAC,CAC9CK,IAAI,CACHb,GAAG,CAAC,CAACc,CAAY,EAAEC,CAAC,KAClBD,CAAC,CAACd,GAAG,CAAEgB,OAAgB,IACrB,IAAI,CAACZ,sBAAsB,CAACa,YAAY,CAACD,OAAO,CAAC,CAClD,CACF,CACF;EACL;;AAxBWf,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;SAAxBA,wBAAwB;EAAAiB,SAAxBjB,wBAAwB;EAAAkB,YAFvB;AAAM","names":["map","BuyProductResolveService","constructor","productService","imageProcessingService","resolve","route","state","id","paramMap","get","isSingleProductCheckout","getProductDetails","pipe","x","i","product","createImages","factory","providedIn"],"sourceRoot":"","sources":["C:\\hit\\Git\\Course-work.-Construction-materials-store-FRONT-end\\src\\app\\buy-product-resolve.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  Resolve,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { Product } from './_model/product.model';\r\nimport { ProductService } from './_services/product.service';\r\nimport { Observable, map } from 'rxjs';\r\nimport { ImageProcessingService } from './image-processing.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BuyProductResolveService implements Resolve<Product[]> {\r\n  constructor(\r\n    private productService: ProductService,\r\n    private imageProcessingService: ImageProcessingService\r\n  ) {}\r\n\r\n  resolve(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Product[] | Observable<Product[]> | Promise<Product[]> {\r\n    const id = route.paramMap.get('id');\r\n    const isSingleProductCheckout = route.paramMap.get(\r\n      'isSingleProductCheckout'\r\n    );\r\n\r\n    return this.productService\r\n      .getProductDetails(isSingleProductCheckout, id)\r\n      .pipe(\r\n        map((x: Product[], i) =>\r\n          x.map((product: Product) =>\r\n            this.imageProcessingService.createImages(product)\r\n          )\r\n        )\r\n      );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}