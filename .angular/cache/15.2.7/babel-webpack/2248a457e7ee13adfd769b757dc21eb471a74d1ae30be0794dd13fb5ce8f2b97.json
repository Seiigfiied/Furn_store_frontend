{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.PATH_OF_API = 'http://localhost:9090';\n  }\n  addProduct(product) {\n    return this.httpClient.post(this.PATH_OF_API + '/addNewProduct', product);\n  }\n  getAllProducts(pageNumber, searchKeyWord = '') {\n    return this.httpClient.get(this.PATH_OF_API + '/getAllProducts?pageNumber=' + pageNumber + '&searchKey=' + searchKeyWord);\n  }\n  deleteProduct(productId) {\n    return this.httpClient.delete(this.PATH_OF_API + '/deleteProductDetails/' + productId);\n  }\n  deleteCart(cartId) {\n    return this.httpClient.delete(this.PATH_OF_API + '/deleteCartItem/' + cartId);\n  }\n  getProductDetailsById(productId) {\n    return this.httpClient.get(this.PATH_OF_API + '/getProductDetailsById/' + productId);\n  }\n  getProductDetails(isSingleProductCheckout, productId) {\n    return this.httpClient.get(this.PATH_OF_API + '/getProductDetails/' + isSingleProductCheckout + '/' + productId);\n  }\n  placeOrder(orderDetails, isCartCheckout) {\n    return this.httpClient.post(this.PATH_OF_API + '/placeOrder/' + isCartCheckout, orderDetails);\n  }\n  addToCart(productId) {\n    return this.httpClient.get(this.PATH_OF_API + '/addToCart/' + productId);\n  }\n  getCartDetails() {\n    return this.httpClient.get(this.PATH_OF_API + '/getCartDetails');\n  }\n  getOrderDetails() {\n    return this.httpClient.get(this.PATH_OF_API + '/getOrderDetails');\n  }\n  getAllOrders(status) {\n    return this.httpClient.get(this.PATH_OF_API + '/getAllOrders/' + status);\n  }\n  markOrderAsDelivered(orderId) {\n    return this.httpClient.get(this.PATH_OF_API + '/markOrderAsDelivered/' + orderId);\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,cAAc;EAEzBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAD9B,gBAAW,GAAG,uBAAuB;EACQ;EAEtCC,UAAU,CAACC,OAAiB;IACjC,OAAO,IAAI,CAACF,UAAU,CAACG,IAAI,CACzB,IAAI,CAACC,WAAW,GAAG,gBAAgB,EACnCF,OAAO,CACR;EACH;EAEOG,cAAc,CAACC,UAAkB,EAAEC,gBAAwB,EAAE;IAClE,OAAO,IAAI,CAACP,UAAU,CAACQ,GAAG,CACxB,IAAI,CAACJ,WAAW,GACd,6BAA6B,GAC7BE,UAAU,GACV,aAAa,GACbC,aAAa,CAChB;EACH;EAEOE,aAAa,CAACC,SAAiB;IACpC,OAAO,IAAI,CAACV,UAAU,CAACW,MAAM,CAC3B,IAAI,CAACP,WAAW,GAAG,wBAAwB,GAAGM,SAAS,CACxD;EACH;EAEOE,UAAU,CAACC,MAAc;IAC9B,OAAO,IAAI,CAACb,UAAU,CAACW,MAAM,CAC3B,IAAI,CAACP,WAAW,GAAG,kBAAkB,GAAGS,MAAM,CAC/C;EACH;EAEOC,qBAAqB,CAACJ,SAAc;IACzC,OAAO,IAAI,CAACV,UAAU,CAACQ,GAAG,CACxB,IAAI,CAACJ,WAAW,GAAG,yBAAyB,GAAGM,SAAS,CACzD;EACH;EAEOK,iBAAiB,CACtBC,uBAAsC,EACtCN,SAAc;IAEd,OAAO,IAAI,CAACV,UAAU,CAACQ,GAAG,CACxB,IAAI,CAACJ,WAAW,GACd,qBAAqB,GACrBY,uBAAuB,GACvB,GAAG,GACHN,SAAS,CACZ;EACH;EAEOO,UAAU,CAACC,YAA0B,EAAEC,cAAuB;IACnE,OAAO,IAAI,CAACnB,UAAU,CAACG,IAAI,CACzB,IAAI,CAACC,WAAW,GAAG,cAAc,GAAGe,cAAc,EAClDD,YAAY,CACb;EACH;EAEOE,SAAS,CAACV,SAAc;IAC7B,OAAO,IAAI,CAACV,UAAU,CAACQ,GAAG,CAAC,IAAI,CAACJ,WAAW,GAAG,aAAa,GAAGM,SAAS,CAAC;EAC1E;EAEOW,cAAc;IACnB,OAAO,IAAI,CAACrB,UAAU,CAACQ,GAAG,CAAY,IAAI,CAACJ,WAAW,GAAG,iBAAiB,CAAC;EAC7E;EAEOkB,eAAe;IACpB,OAAO,IAAI,CAACtB,UAAU,CAACQ,GAAG,CAAU,IAAI,CAACJ,WAAW,GAAG,kBAAkB,CAAC;EAC5E;EAEOmB,YAAY,CAACC,MAAc;IAChC,OAAO,IAAI,CAACxB,UAAU,CAACQ,GAAG,CACxB,IAAI,CAACJ,WAAW,GAAG,gBAAgB,GAAGoB,MAAM,CAC7C;EACH;EAEOC,oBAAoB,CAACC,OAAY;IACtC,OAAO,IAAI,CAAC1B,UAAU,CAACQ,GAAG,CACxB,IAAI,CAACJ,WAAW,GAAG,wBAAwB,GAAGsB,OAAO,CACtD;EACH;;AAjFW5B,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAA6B,SAAd7B,cAAc;EAAA8B,YAFb;AAAM","names":["ProductService","constructor","httpClient","addProduct","product","post","PATH_OF_API","getAllProducts","pageNumber","searchKeyWord","get","deleteProduct","productId","delete","deleteCart","cartId","getProductDetailsById","getProductDetails","isSingleProductCheckout","placeOrder","orderDetails","isCartCheckout","addToCart","getCartDetails","getOrderDetails","getAllOrders","status","markOrderAsDelivered","orderId","factory","providedIn"],"sourceRoot":"","sources":["C:\\hit\\Git\\Course_work\\src\\app\\_services\\product.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Product } from '../_model/product.model';\r\nimport { OrderDetails } from '../_model/order-details.model';\r\nimport { Order } from '../_model/order.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProductService {\r\n  PATH_OF_API = 'http://localhost:9090';\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  public addProduct(product: FormData) {\r\n    return this.httpClient.post<Product>(\r\n      this.PATH_OF_API + '/addNewProduct',\r\n      product\r\n    );\r\n  }\r\n\r\n  public getAllProducts(pageNumber: number, searchKeyWord: string = '') {\r\n    return this.httpClient.get<Product[]>(\r\n      this.PATH_OF_API +\r\n        '/getAllProducts?pageNumber=' +\r\n        pageNumber +\r\n        '&searchKey=' +\r\n        searchKeyWord\r\n    );\r\n  }\r\n\r\n  public deleteProduct(productId: number) {\r\n    return this.httpClient.delete(\r\n      this.PATH_OF_API + '/deleteProductDetails/' + productId\r\n    );\r\n  }\r\n\r\n  public deleteCart(cartId: number) {\r\n    return this.httpClient.delete(\r\n      this.PATH_OF_API + '/deleteCartItem/' + cartId\r\n    );\r\n  }\r\n\r\n  public getProductDetailsById(productId: any) {\r\n    return this.httpClient.get<Product>(\r\n      this.PATH_OF_API + '/getProductDetailsById/' + productId\r\n    );\r\n  }\r\n\r\n  public getProductDetails(\r\n    isSingleProductCheckout: boolean | any,\r\n    productId: any\r\n  ) {\r\n    return this.httpClient.get<Product[]>(\r\n      this.PATH_OF_API +\r\n        '/getProductDetails/' +\r\n        isSingleProductCheckout +\r\n        '/' +\r\n        productId\r\n    );\r\n  }\r\n\r\n  public placeOrder(orderDetails: OrderDetails, isCartCheckout: boolean) {\r\n    return this.httpClient.post(\r\n      this.PATH_OF_API + '/placeOrder/' + isCartCheckout,\r\n      orderDetails\r\n    );\r\n  }\r\n\r\n  public addToCart(productId: any) {\r\n    return this.httpClient.get(this.PATH_OF_API + '/addToCart/' + productId);\r\n  }\r\n\r\n  public getCartDetails() {\r\n    return this.httpClient.get<Product[]>(this.PATH_OF_API + '/getCartDetails');\r\n  }\r\n\r\n  public getOrderDetails() {\r\n    return this.httpClient.get<Order[]>(this.PATH_OF_API + '/getOrderDetails');\r\n  }\r\n\r\n  public getAllOrders(status: string) {\r\n    return this.httpClient.get<Order[]>(\r\n      this.PATH_OF_API + '/getAllOrders/' + status\r\n    );\r\n  }\r\n\r\n  public markOrderAsDelivered(orderId: any) {\r\n    return this.httpClient.get(\r\n      this.PATH_OF_API + '/markOrderAsDelivered/' + orderId\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}